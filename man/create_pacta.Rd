% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/local_pacta.R
\name{create_pacta}
\alias{create_pacta}
\alias{local_pacta}
\title{Create a pacta projects}
\usage{
create_pacta(
  dir = tempfile(pattern = "pacta_"),
  input_paths = example_input_paths(),
  data = get_env("PACTA_DATA")
)

local_pacta(
  dir = tempfile("pacta_"),
  input_paths = example_input_paths(),
  data = get_env("PACTA_DATA"),
  envir = parent.frame()
)
}
\arguments{
\item{dir}{String. Path where to create pacta files and directories.}

\item{input_paths}{String. Path to portfolio and parameter files.}

\item{data}{String. Path to the private pacta-data/ directory.}

\item{envir}{Must be passed on to \code{withr::defer()}.}
}
\value{
These functions are called for their side effect. They return the
first argument invisibly.
}
\description{
These functions create a template for your pacta project, populated with
a demo portfolio and parameter file. They differ in whether or not the project
persists after you exit the local context that calls these functions:
\itemize{
\item \code{create_pacta()} creates a persistent pacta project. This is what you would
normally use in real projects.
\item \code{local_pacta()} creates an ephemeral pacta project, that is auto-removed
when you exit the local context that calls \code{local_pacta()}. This is what you
would normally use in examples and tests.
}
}
\examples{
library(fs)

pacta <- tempfile("somewhere")
create_pacta(pacta, data = "path/to/pacta-data")
dir_tree(pacta)
readLines(path(pacta, ".env"))

# Auto-remove the pacta project when you exit the local context
pacta_ephemeral <- tempfile("somewhere")
local({
  local_pacta(pacta_ephemeral)
  dir_tree(pacta_ephemeral, all = TRUE)
  dir_exists(pacta_ephemeral)
})
dir_exists(pacta_ephemeral)
}
\seealso{
https://testthat.r-lib.org/articles/test-fixtures.html#local-helpers.
}
